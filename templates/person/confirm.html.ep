%   if(1) {
%
%       asset_required  ('css',       'steps',          {                                 });
%       asset_required  ('css',       'formValidation', { after => [ 'steps'            ] });
%       asset_required  ('css',       'select2',        {                                 });
%       asset_required  ('css',       'iCheck',         {                                 });
%       asset_required  ('js',        'multiField',     {                                 });
%       asset_required  ('js',        'steps',          {                                 });
%       asset_required  ('js',        'formValidation', { after => [ 'steps', 'tooltip' ] });
%       asset_required  ('js',        'select2',        {                                 });
%       asset_required  ('js',        'iCheck',         {                                 });
%       asset_required  ('js',        'googleMaps',     {                                 });
%       asset_required  ('js',        'locationPicker', { after => [ 'googleMaps'       ] });
%
%       #
%       # This snippet implements the wizard form and fields validation
%       #
%       snippet_register('js_snippet', 'steps', { }, begin
<script>
    $(document).ready(function() {

        function stepChangeIcon(formElement, currentIndex, priorIndex) {
            var currentTarget = formElement.find('div.content.clearfix');
            if(currentTarget == null) {
                return;
            }
            currentTarget.attr('class').split(/\s+/).forEach(function(currentValue, index, arr) {
                if(currentValue.startsWith('fa-')) {
                    currentTarget.removeClass(currentValue);
                }
            });
            switch(currentIndex) {
                case 0:
                    currentTarget.addClass('fa-id-card');
                    break;
                case 1:
                    currentTarget.addClass('fa-envelope');
                    break;
                case 2:
                    currentTarget.addClass('fa-phone');
                    break;
                case 3:
                    currentTarget.addClass('fa-globe');
                    break;
                case 4:
                    currentTarget.addClass('fa-lock');
                    break;
                case 5:
                    currentTarget.addClass('fa-check');
                    break;
            }
        }

        function stepValidation(eventHappened, currentIndex, newIndex) {
            if(newIndex < currentIndex) {
                return(true);
            }
            var form        = eventHappened.currentTarget;
            var fv          = $(form).data('formValidation');
            var $container  = $(form).find('fieldset[data-step="' + currentIndex + '"]');
            fv.validateContainer($container);
            var isValidStep = fv.isValidContainer($container);
            if (isValidStep === false || isValidStep === null) {
                return(false);
            } else {
                return(true);
            }
        }

        // var unicode_letters_regexp = '\u0000-\u007F\u0080-\u00FF\u0100-\u017F\u0180-\u024F\u0400-\u04FF\u0500-\u052F';

        $('#wizard').steps({
            bodyTag:          'fieldset',
            headerTag:        'h1',
            transitionEffect: 'fade',
            onStepChanging:   stepValidation,
            onFinishing:      stepValidation,
            onStepChanged:    function(eventHappened, currentIndex, priorIndex) {
                var formElement = $(eventHappened.currentTarget);
                if(formElement != null) {
                    stepChangeIcon(formElement, currentIndex, priorIndex);
                }
            },
            onFinished:       function(eventHappened, currentIndex) {
                $(eventHappened.currentTarget).formValidation('defaultSubmit');
            }
        }).formValidation({
            framework:        'bootstrap',
            icon: {
                valid:        'glyphicon glyphicon-ok',
                invalid:      'glyphicon glyphicon-remove',
                validating:   'glyphicon glyphicon-refresh'
            },
            excluded: ':disabled',
            fields: {
                'first-name': {
                    err: 'tooltip',
                    validators: {
                        notEmpty: {},
                        stringLength: {
                            min: 1,
                            max: 64,
                        }
                    }
                },
                'middle-name': {
                    err: 'tooltip',
                    validators: {
                        stringLength: {
                            min: 1,
                            max: 64,
                        }
                    }
                },
                'last-name': {
                    err: 'tooltip',
                    validators: {
                        notEmpty: {},
                        stringLength: {
                            min: 1,
                            max: 64,
                        }
                    }
                },
                'language': {
                    err: 'tooltip',
                    validators: {
                        notEmpty: {}
                    }
                },
                'tz-area': {
                    err: 'tooltip',
                    validators: {
                        notEmpty: {}
                    }
                },
                'tz-city': {
                    err: 'tooltip',
                    validators: {
                        notEmpty: {}
                    }
                },
                'latitude': {
                    err: 'tooltip',
                    validators: {
                        notEmpty: {},
                        numeric: {}
                    }
                },
                'longitude': {
                    err: 'tooltip',
                    validators: {
                        notEmpty: {},
                        numeric: {}
                    }
                },
                'secret-question': {
                    err: 'tooltip',
                    validators: {
                        notEmpty: {}
                    }
                },
                'secret-answer': {
                    err: 'tooltip',
                    validators: {
                        notEmpty: {},
                    }
                },
                'secret-answer-repeat': {
                    err: 'tooltip',
                    validators: {
                        notEmpty: {},
                        identical: {
                            field: 'secret-answer'
                        }
                    }
                },
                'password': {
                    err: 'tooltip',
                    validators: {
                        notEmpty: {},
                    }
                },
                'password-repeat': {
                    err: 'tooltip',
                    validators: {
                        notEmpty: {},
                        identical: {
                            field: 'password'
                        }
                    }
                },
                'agree': {
                    err: 'tooltip',
                    validators: {
                        choice: {
                            min: 1
                        }
                    }
                }
            }
        });
        stepChangeIcon($('#wizard'), 0, null);
    });
</script>
%       end);
%       snippet_register('js_snippet', 'multiField', { after => [ 'steps' ] }, begin
<script>
    $(document).ready(function() {
        var mfEmails = new multiField({
            idContainer:  'emails',
            fieldPrefix:  'email',
            fieldType:    'email',
            addClasses:   'multifield',
            afterAppend:  function(elementCurrent, elementNew) {
                if(elementNew != null) 
                    $('#wizard').formValidation('addField', $(elementNew).find('input'), {
                        err: 'tooltip',
                        validators: {
                            notEmpty: {}
                        }
                    });
            }
        }); mfEmails.fieldAppend();                                                        
        var mfPhones = new multiField({
            idContainer:  'phones',
            fieldPrefix:  'phone',
            fieldType:    'phone',
            addClasses:   'multifield',
            afterAppend:  function(elementCurrent, elementNew) {
                if(elementNew != null) 
                    $('#wizard').formValidation('addField', $(elementNew).find('input'), {
                        err: 'tooltip',
                        validators: {
                            notEmpty: {}
                        }
                    });
            }
        }); mfPhones.fieldAppend();                                                        
    });
</script>
%       end);
%       snippet_register('js_snippet', 'select2', { after => [ 'steps' ] }, begin
<script>
    $(document).ready(function() {
        $('.select2-select').select2({ width: '100%' });
        $('select[name="secret-question"].select2-select').select2({ width: '100%', minimumResultsForSearch: -1 });
    });
</script>
%       end);
%       snippet_register('js_snippet', 'language', { after => [ 'steps', 'i18n' ] }, begin
<script>
    $(document).ready(function() {
        var language_selected = $.i18n.lng();
        if(language_selected != null) {
            $('#language').val(language_selected).trigger('change');
        }
    });
</script>
%       end);
%       snippet_register('js_snippet', 'timezone', { after => [ 'steps' ] }, begin
<script>
    $(document).ready(function() {

        var timezones;
        var timezoneDetected = Intl.DateTimeFormat().resolvedOptions().timeZone.split('/');

        function updateTimezones(timezonesLoaded, areaSelected) {
            if(timezones === undefined) {
                $('#tz-city').attr('disabled', true);
                $.get('/ajax/timezone/*/*', function(data) { timezones = data.timezones; updateTimezones(1, 0); }, 'json');
            }

            if(timezonesLoaded) {
                $('#tz-area option').remove();
                $('#tz-city').attr('disabled', false);
                Object.keys(timezones).forEach(function(area) {
                    $('#tz-area').append($('<option>', { value: area, text: area }));
                });
                areaSelected = 1;
            }

            if(areaSelected) {
                var area = $('#tz-area option:selected').val();
                $('#tz-city option').remove();
                $('#tz-city').attr('disabled', false);
                Object.keys(timezones[area]).forEach(function(city) {
                    $('#tz-city').append($('<option>', { value: city, text: city }));
                });
            }

            if(timezonesLoaded && timezoneDetected) {
                $('#tz-area').val(timezoneDetected[0]).trigger('change');
                $('#tz-city').val(timezoneDetected[1]).trigger('change');
            }
        }

        updateTimezones(0, 0);

        $('#tz-area').change(function() { updateTimezones(0, 1); });

    });
</script>
%       end);
%       snippet_register('js_snippet', 'location', { after => [ 'steps' ] }, begin
<script>
    $(document).ready(function() {

        var radius = 3000;
        function showGeoPicker() {
            $('#modalGeoPickerPlugin').locationpicker({
                location: {
                    latitude:       $('#latitude').val(),
                    longitude:      $('#longitude').val()
                },
                radius: radius,
                inputBinding: {
                    latitudeInput:  $('#latitude'),
                    longitudeInput: $('#longitude')
                },
            });
            $('#modalGeoPickerDialog').on('shown.bs.modal', function () {
                $('#modalGeoPickerPlugin').locationpicker('autosize');
            });
            $('#modalGeoPickerDialog').modal({ keyboard: true, show: true })
        }

        $.get('http://ip-api.com/json/', function(data) {
                 $('#latitude').val(data.lat);
                $('#longitude').val(data.lon);
                $('#wizard').
                    formValidation('validateField', 'latitude').
                    formValidation('validateField', 'longitude');
        }, 'json');
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                 $('#latitude').val(position.coords.latitude);
                $('#longitude').val(position.coords.longitude);
                $('#wizard').
                    formValidation('validateField', 'latitude').
                    formValidation('validateField', 'longitude');
                radius = 100;
            });
        }
         $('#latitude').click(showGeoPicker);
        $('#longitude').click(showGeoPicker);
    });
</script>
%       end);
%       snippet_register('js_snippet', 'iChecks', { after => [ 'steps' ] }, begin
<script>
    $(document).ready(function () {
        $('.i-checks').iCheck({
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green',
            tap: true
        }).on('ifChanged', function(eventHappened) {
            var field = $(this).attr('name');
            $('#wizard').formValidation('revalidateField', field);
        }).end();
    });
</script>
%       end);
<div class="wrapper wrapper-content animated fadeInRight signupscreen">
  <div>
    <div class="ibox col-md-6 col-md-offset-3">
      <div class="text-center">
        <h1 class="logo-name"><span data-i18n="signupscreen.hi">Hi!</span></h1>
      </div>
      <div class="ibox-content">
        <h2 data-i18n="signupscreen.form-header">Account Confirmation Form</h2>
        <p>
          Please, confirm your account by filling the form below.
          Some fields are required, some are not, so you could provide us with the information later.
        </p>
        <form id="wizard" method="POST" class="wizard">
          <h1>Full Name</h1>
          <fieldset data-step="0">
            <div class="form-group">
              <label>First (Given) Name *</label>
              <input id="first-name" name="first-name" type="text" class="form-control required">
            </div>
            <div class="form-group">
              <label>Middle Name</label>
              <input id="middle-name" name="middle-name" class="form-control" type="text">
            </div>
            <div class="form-group">
              <label>Last (Family) Name *</label>
              <input id="last-name" name="last-name" type="text" class="form-control required">
            </div>
          </fieldset>
          <h1>E-Mail</h1>
          <fieldset data-step="1">
            <label>E-Mail Addresses:</label>
            <div class="form-group" id="emails"></div>
          </fieldset>
          <h1>Phone</h1>
          <fieldset data-step="2">
            <label>Phone Numbers:</label>
            <div class="form-group" id="phones"></div>
          </fieldset>
          <h1>Region</h1>
          <fieldset data-step="3">
            <div class="form-group">
              <label>Language</label>
              <select id="language" data-placeholder="Choose Your Preferred Language" class="select2-select form-control" name="language">
                <option value>Please, select</option>
                <option value="en_US">English (US)</option>
                <option value="uk_UA">Ukrainian</option>
              </select>
            </div>
            <div>
              <label>Timezone</label>
              <div class="row">
                <div class="col-md-6">
                  <div class="form-group">
                    <select data-placeholder="Choose Your Time Zone" class="select2-select form-control" name="tz-area" id="tz-area"></select>
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="form-group">
                    <select data-placeholder="Choose Your Time Zone" class="select2-select form-control" name="tz-city" id="tz-city"></select>
                  </div>
                </div>
              </div>
            </div>
            <div>
              <label>Location</label>
              <div class="row">
                <div class="col-md-6">
                  <div class="form-group">
                    <input data-placeholder="Your Latitude" id="latitude" name="latitude" type="text" class="form-control" readonly>
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="form-group">
                    <input data-placeholder="Your Longtitude" id="longitude" name="longitude" type="text" class="form-control" readonly>
                  </div>
                </div>
              </div>
            </div>
            <div id="modalGeoPickerDialog" class="modal inmodal">
              <div class="modal-dialog modal-lg">
                <div class="modal-content">
                  <div class="modal-header">
                    <h4 class="modal-title">Please, clarify your location</h4>
                  </div>
                  <div class="modal-body">
                    <div id="modalGeoPickerPlugin" style="width: 100%; height: 400px;">
                      Here Be GoogleMaps
                    </div>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">OK</button>
                  </div>
                </div>
              </div>
            </div>
          </fieldset>
          <h1>Password</h1>
          <fieldset data-step="4">
            <div class="form-group">
              <label>Secret Question *</label>
              <select data-placeholder="Choose The Secret Question" class="form-control required select2-select" name="secret-question">
                <option value>Please, select</option>
                <option value="mothers_maiden_name">Mother's Maiden Name</option>
                <option value="fathers_year_of_birth">Father's Year of Birth</option>
              </select>
            </div>
            <div>
              <label>The Answer *</label>
              <div class="row">
                <div class="col-md-6">
                  <div class="form-group">
                    <input data-placeholder="Your Answer" id="secret-answer" name="secret-answer" type="password" class="form-control required">
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="form-group">
                    <input data-placeholder="Your Answer" id="secret-answer-repeat" name="secret-answer-repeat" type="password" class="form-control required">
                  </div>
                </div>
              </div>
            </div>
            <div>
              <label>Enter Your Password *</label>
              <div class="row">
                <div class="col-md-6">
                  <div class="form-group">
                    <input data-placeholder="Your Password" id="password" name="password" type="password" class="form-control required">
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="form-group">
                    <input data-placeholder="Your Password" id="password-repeat" name="password-repeat" type="password" class="form-control required">
                  </div>
                </div>
              </div>
            </div>
          </fieldset>
          <h1>Finish</h1>
          <fieldset data-step="5">
            <div class="form-group">
              <label>How Did You Find Us?</label>
              <select id="reference" data-placeholder="Please, refer the source" class="form-control select2-select" name="reference">
                <option value>Please, select</option>
                <option value="invitation">I've got an invitation from you</option>
                <option value="friend">A friend of mine recommended you</option>
                <option value="search">I searched for a service provided</option>
                <option value="ads_online">I saw your ads on the Internet</option>
                <option value="ads_offline">I saw your ads offline</option>
                <option value="other">Other option</option>
              </select>
            </div>
            <div class="form-group">
              <label>Should We Know Anything Else?</label>
              <input data-placeholder="Additional information" name="notes" type="text" class="form-control">
            </div>
            <div class="form-group">
              <label>Please, Accept the Agreement *</label>
              <div class="i-checks">Yes, I have read and accepted it: <input type="checkbox" class="form-control required" name="agree"></div>
            </div>
          </fieldset>
        </form>
      </div>
      <hr />
      <a class="btn btn-white set_en_US" id="button_en_US"><img src="/img/flags/32/United-States.png"></a>
      <a class="btn btn-white set_uk_UA" id="button_uk_UA"><img src="/img/flags/32/Ukraine.png"></a>
      <p class="m-t"><small><span data-i18n="signupscreen.powered-by">Powered by</span> MonkeyMan &amp; HyperMouse</small> </p>
    </div>
  </div>
</div>
%   }
%   layout('unauthorized', title_message => 'Hello!', i18n_classes => [ qw/ signupscreen / ]);
